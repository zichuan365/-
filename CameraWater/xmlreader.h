#pragma once
#include "./TinyXML/tinyxml.h"
#include "./TinyXML/tinystr.h"
#include <iostream>
#include <string.h>

using namespace std;

class XMLReader
{
public:
    XMLReader(){  }

//	//************************************?????***********************************//
//	static bool ReadStereoPara(std::string filename, CamPara& camLPara, CamPara& camRPara, struct RT& relativeRT,Size& imgSize);
//	//???????????
//	static bool ReadPoints(std::string filename,vector<Point>& points);
//	//????????? ???????????????????????
//	static bool ReadLineParams(std::string filename, cv::Point3f& dir, cv::Point3f& pnt);
//	///????????????????????≥Ü?????????????????z=0)???????????????????
//	static bool readCornerData(std::string filename, CalibrationData& m_cornerData);
    //??????????????
    static bool ReadCamParams(std::string filename, string& CamIndex,float& shutter, float& gain,
                              int& CamWaitTime,int& MemorySize);

    static bool ReadImgSize(std::string filename,int& imgSize);

//	//?????????????????
//	static bool ReadMotorParams(std::string filename, float& speed, float& distance);
//	//??????????????????
//	//static bool ReadLaserDetectParams(std::string filename, int& thre, int& windowWidth, int& centerRange, int& GroThre);
//	static bool ReadLaserSystemConfig(std::string filename, ScanParams& params);
//	//***ZZL
//	//???3D??????®∞???
//	//static bool Read3DdetectSetingParams(std::string filename, detectorParams &DetectorParams, vector <detectObjParams> &DetectObjsParams);
//	static bool ReadRT44(std::string filename, vector<Mat>& Inputs);
//	////???3D??????®∞???(????????????)
//	//static bool Read3DdetectSetingParams(std::string filename, detectorParams &DetectorParams, vector <detectObjParams> &DetectObjsParams);
//	//****************?????°¿?????HPP************************//
//	static bool ReadUnderWaterValue(std::string filename, Mat& DisL, Mat& MiuL, Mat& Nor_valueL, Mat&R_l2r, Mat& DisR, Mat& MiuR, Mat& Nor_valueR, Mat&t_l2r);

//	///////????????
//	static bool ReadUnderWaterValue1Layer(std::string filename, Mat& DisL, Mat& MiuL, Mat& Nor_valueL, Mat&R_l2r, Mat& DisR, Mat& MiuR, Mat& Nor_valueR, Mat&t_l2r);


//	///??????????????????????????????????????????????????
//	static bool readCamPara(std::string filename, CamPara& m_camPara);

private:

//	//*****************?????******************//
//	///??????????????????
//	static bool parseCamLIntrinsicparametersElement(TiXmlHandle hDoc, CamPara& m_camPara);
//	//??????????????????
//	static bool parseCamRIntrinsicparametersElement(TiXmlHandle hDoc, CamPara& m_camPara);
//	//?????????????????
//	static bool parseCamLDistortionsElement(TiXmlHandle hDoc, CamPara& m_camPara);
//	//?????????????????
//	static bool parseCamRDistortionsElement(TiXmlHandle hDoc, CamPara& m_camPara);
//	//????RT???
//	static bool parseRTElement(TiXmlHandle hDoc,RT& steroRTPara);
//	//??????????????Size???
//	static bool parseStereoParaSize(TiXmlHandle hDoc,Size& imgSize);
//	//????????????
//	static bool parsePoints(TiXmlHandle hDoc,vector<Point>& points);
//	//??????????
//	static bool parseLineParams(TiXmlHandle hDoc, cv::Point3f& dir, cv::Point3f& pnt);
//	//???????????????
    static bool parseCamLParams(TiXmlHandle hDoc, string& CamIndex,float& shutter, float& gain,
                                int& CamWaitTime,int& MemorySize);

    static bool parseImgSize(TiXmlHandle hDoc,int& imgSize);

//	//???????????????
//	static bool parseMotorParams(TiXmlHandle hDoc, float& speed, float& distance);
//	//???????????
//	static bool parseLaserDetectParams(TiXmlHandle hDoc, int& thre, int& windowWidth, int& centerRange);
//	//?????ıÙID
//	static bool parseDeviceID(TiXmlHandle hDoc, int& arduinoId, int& motorId);
//	//???????????
//	static bool parseLeftParams(TiXmlHandle hDoc, int& groThresh);
//	//************************?????*****************************/
//	///?????????????
//	static bool parseImageSizeElement(TiXmlHandle hDoc, CalibrationData& m_cornerData);
//	///???????????????
//	static bool parseCornerNumPerFrameElement(TiXmlHandle hDoc, vector<int>& CornerNumPerFrame);
//	///?????????????????
//	static bool parseCornerPointsElement(TiXmlHandle hDoc, const vector<int>& CornerNumPerFrame, CalibrationData& m_cornerData);
//	///????????????z=0)???
//	static bool parseFeaturePointsElement(TiXmlHandle hDoc, const vector<int>& CornerNumPerFrame, CalibrationData& m_cornerData);
//	///???????????????
//	static bool parseFrameNumListElement(TiXmlHandle hDoc, CalibrationData& m_cornerData);
//	//************HPP??°¿???????***********************//
//	//???????????°¿?????diatance
//	static bool ReadDisL(TiXmlHandle hDoc, Mat&DisL);
//	///????????????
//	static bool parseIntrinsicparametersElement(TiXmlHandle hDoc, CamPara& m_camPara);
//	///???????????
//	static bool parseDistortionsElement(TiXmlHandle hDoc, CamPara& m_camPara);
//	//?????????????????
//	static bool parseImageRTElement(TiXmlHandle hDoc, CamPara& m_camPara);
//	//???????????°¿?????miu
//	static bool ReadMiuL(TiXmlHandle hDoc, Mat&MiuL);

//	//???????????°¿?????normalvalue
//	static bool ReadnormalvalueL(TiXmlHandle hDoc, Mat &Nor_valueL);

//	//???????????°¿?????diatance
//	static bool ReadDisR(TiXmlHandle hDoc, Mat&DisR);

//	//???????????°¿?????miu
//	static bool ReadMiuR(TiXmlHandle hDoc, Mat&MiuR);

//	//???????????°¿?????normalvalue
//	static bool ReadnormalvalueR(TiXmlHandle hDoc, Mat &Nor_valueR);

//	//???R
//	static bool ReadRvalue(TiXmlHandle hDoc, Mat &R_l2r);

//	//???T
//	static bool ReadTvalue(TiXmlHandle hDoc, Mat &t_l2r);

//	//////???????????????
//	static bool ReadDisL1Layer(TiXmlHandle hDoc, Mat&DisL);
//	static bool ReadMiuL1Layer(TiXmlHandle hDoc, Mat&MiuL);
//	static bool ReadDisR1Layer(TiXmlHandle hDoc, Mat&DisL);
//	static bool ReadMiuR1Layer(TiXmlHandle hDoc, Mat&MiuR);
};
